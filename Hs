pipeline {
    agent { label 'hshdh' }  
    environment {
        CREDENTIAL_ID = 'my-keystore'  // Replace with your actual Jenkins credential ID
    }
    stages {
        stage('Retrieve and Verify JKS File') {
            steps {
                script {
                    withCredentials([file(credentialsId: CREDENTIAL_ID, variable: 'JKS_FILE')]) {
                        def workspace = env.WORKSPACE
                        def savedFilePath = "${workspace}/keystore.jks"

                        // Copy JKS file from credentials
                        sh "cp ${JKS_FILE} ${savedFilePath}"

                        // Verify file type
                        def fileType = sh(script: "file ${savedFilePath}", returnStdout: true).trim()
                        echo "Detected File Type: ${fileType}"

                        // Check if it's a valid JKS file
                        if (fileType.contains("Java KeyStore")) {
                            echo "JKS file verified successfully."
                        } else {
                            error "ERROR: Retrieved file is not a valid JKS file!"
                        }
                    }
                }
            }
        }
        stage('Send Email with JKS File') {
            steps {
                script {
                    def savedFilePath = "${env.WORKSPACE}/keystore.jks"

                    if (fileExists(savedFilePath)) {
                        emailext(
                            subject: "Jenkins - Retrieved JKS File",
                            body: "Attached is the Java KeyStore (JKS) file retrieved from Jenkins.",
                            to: 'recipient@example.com',
                            attachFiles: savedFilePath
                        )
                        echo "Email sent with JKS file attachment."
                    } else {
                        echo "ERROR: JKS file not found, skipping email."
                    }
                }
            }
        }
    }
}
